/// <reference types="node" />
import { Redis } from 'ioredis';
type EventHandler = (queryKey: string, executionTime: number) => void;
interface Config {
    redis: Redis;
    defaultTtl?: number;
    maxEntrySize?: number;
    onCacheHit?: EventHandler;
    onCacheMiss?: EventHandler;
}
export declare const configureCache: (options: Config) => {
    set: (queryKey: string, data: string | Buffer, dependencies: string[], ttlInSeconds?: number) => Promise<void>;
    get: (queryKey: string) => Promise<string | null>;
    invalidate: (dependency: string) => Promise<void>;
    clear: () => Promise<void>;
    getSize: () => Promise<number>;
    getStringKeySize: () => Promise<number>;
};
export default configureCache;
